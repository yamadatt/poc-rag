[build]
  # Build command (run in frontend directory) - use build:fast to skip type checking
  command = "cd frontend && npm ci --include=dev && npx vite build"
  
  # Directory to publish (built files from frontend)
  publish = "frontend/dist"
  
  # Functions directory for serverless functions
  functions = "frontend/netlify/functions"
  
  # Edge functions directory
  edge_functions = "frontend/netlify/edge-functions"
  
  # Environment variables for build
  environment = { NODE_VERSION = "20", NPM_VERSION = "10", NODE_ENV = "production" }

[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

[build.processing.images]
  compress = true

# API proxy - redirect /api/* to backend API via serverless function
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/api-proxy"
  status = 200

# Redirect rules for SPA (catch-all for client-side routing)
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Security headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https: wss: *.amazonaws.com *.execute-api.amazonaws.com"

[[headers]]
  for = "*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

# Development context (branch deploys)
[context.branch-deploy]
  command = "cd frontend && npm ci --include=dev && npx vite build"
  [context.branch-deploy.environment]
    NODE_ENV = "development"

# Production context
[context.production]
  command = "cd frontend && npm ci --include=dev && npx vite build"
  [context.production.environment]
    NODE_ENV = "production"
    # Set VITE_API_BASE_URL in Netlify dashboard environment variables

# Pull request previews
[context.deploy-preview]
  command = "cd frontend && npm ci --include=dev && npx vite build"
  [context.deploy-preview.environment]
    NODE_ENV = "preview"
    # Set VITE_API_BASE_URL in Netlify dashboard environment variables

# Development/staging branch context
[context.staging]
  command = "cd frontend && npm ci --include=dev && npx vite build"
  [context.staging.environment]
    NODE_ENV = "staging"
    # Set VITE_API_BASE_URL in Netlify dashboard environment variables

# Plugin configuration
[[plugins]]
  package = "@netlify/plugin-lighthouse"
  
  [plugins.inputs.thresholds]
    performance = 0.8
    accessibility = 0.9
    best-practices = 0.8
    seo = 0.8

[[plugins]]
  package = "netlify-plugin-submit-sitemap"
  
  [plugins.inputs]
    baseUrl = "https://your-rag-app.netlify.app"
    sitemapPath = "/sitemap.xml"
    ignorePeriod = 0
    providers = [
      "google",
      "bing"
    ]

# Functions configuration for API proxy
[functions]
  directory = "frontend/netlify/functions"
  node_bundler = "esbuild"

# Edge functions configuration
[[edge_functions]]
  function = "geo-redirect"
  path = "/geo/*"

# Environment variables to set in Netlify dashboard:
# VITE_API_BASE_URL = your AWS API Gateway URL (e.g., https://abc123.execute-api.us-west-2.amazonaws.com/prod)
# BACKEND_API_URL = your backend API URL for serverless functions